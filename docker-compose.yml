version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: q_reserve_db
    environment:
      POSTGRES_DB: q_reserve_db
      POSTGRES_USER: q_reserve_user
      POSTGRES_PASSWORD: q_reserve_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    networks:
      - q_reserve_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U q_reserve_user -d q_reserve_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    container_name: q_reserve_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - q_reserve_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery:
    build: .
    container_name: q_reserve_celery
    command: celery -A core.extensions.celery worker --loglevel=info
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://q_reserve_user:q_reserve_password@db:5432/q_reserve_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./static:/app/static
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - q_reserve_network
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery-beat:
    build: .
    container_name: q_reserve_celery_beat
    command: celery -A core.extensions.celery beat --loglevel=info
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://q_reserve_user:q_reserve_password@db:5432/q_reserve_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - q_reserve_network
    restart: unless-stopped

  # Flask Application
  web:
    build: .
    container_name: q_reserve_web
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://q_reserve_user:q_reserve_password@db:5432/q_reserve_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-this-in-production
    volumes:
      - ./static:/app/static
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery:
        condition: service_started
    networks:
      - q_reserve_network
    restart: unless-stopped

  # Nginx (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: q_reserve_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./static:/var/www/static
    depends_on:
      - web
    networks:
      - q_reserve_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  q_reserve_network:
    driver: bridge